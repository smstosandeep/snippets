author: Sandeep Sirohi
npm init

npm install react typescript @types/react --save-dev

=========================Type script==========================
npx tsc --init
{
  "compilerOptions": {
    // Default
    "target": "es5", 
    "esModuleInterop": true, 
    "forceConsistentCasingInFileNames": true,
    "strict": true, 
    "skipLibCheck": true,

    // Added
    "jsx": "react", 
    "module": "ESNext",  
    "declaration": true,
    "declarationDir": "types",
    "sourceMap": true,
    "outDir": "dist",
    "moduleResolution": "node",
    "allowSyntheticDefaultImports": true,
    "emitDeclarationOnly": true,
  }
}
OR
npm install @tsconfig/recommended --save-dev 
"extends": "@tsconfig/recommended/tsconfig.json"
=============================================================
https://www.bayanbennett.com/posts/making-a-ui-library-with-react-and-typescript/
https://dev.to/alexeagleson/how-to-create-and-publish-a-react-component-library-2oe
==================================================================
run in the package application
npm link

run in the target application
npm link test-package1

import package in the application:
import { Button } from 'test-package1' 

Change in package will be reflected in the application on the fly.

For test we can also use storybook.
